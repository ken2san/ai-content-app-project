--- ログファイルを初期化します ---
--- Docker Compose を起動します (コンテナは自動削除) ---
#1 [internal] load local bake definitions
#1 reading from stdin 453B done
#1 DONE 0.0s

#2 [internal] load build definition from Dockerfile
#2 transferring dockerfile: 1.69kB done
#2 DONE 0.0s

#3 [internal] load metadata for docker.io/library/python:3.9-slim-buster
#3 DONE 1.0s

#4 [internal] load .dockerignore
#4 transferring context: 2B done
#4 DONE 0.0s

#5 [1/9] FROM docker.io/library/python:3.9-slim-buster@sha256:320a7a4250aba4249f458872adecf92eea88dc6abd2d76dc5c0f01cac9b53990
#5 resolve docker.io/library/python:3.9-slim-buster@sha256:320a7a4250aba4249f458872adecf92eea88dc6abd2d76dc5c0f01cac9b53990 done
#5 DONE 0.0s

#6 [internal] load build context
#6 transferring context: 13.64kB done
#6 DONE 0.0s

#7 [3/9] RUN apt-get update && apt-get install -y     ffmpeg     fontconfig     ttf-dejavu-core     --no-install-recommends &&     rm -rf /var/lib/apt/lists/*
#7 CACHED

#8 [6/9] COPY main.py .
#8 CACHED

#9 [2/9] WORKDIR /app
#9 CACHED

#10 [4/9] COPY requirements.txt .
#10 CACHED

#11 [5/9] RUN pip install --no-cache-dir -r requirements.txt
#11 CACHED

#12 [7/9] COPY ai_content_automation_app.html .
#12 CACHED

#13 [8/9] COPY app/ app/
#13 DONE 0.0s

#14 [9/9] RUN mkdir -p generated_media
#14 DONE 0.1s

#15 exporting to image
#15 exporting layers 0.0s done
#15 exporting manifest sha256:b4b3ff4a3a1bd3f122a883c947b8ea0199e4006e864ad7d1e8f108d5cb655627 done
#15 exporting config sha256:47e6c11d60c84d4ca7bc5ac5f03cac8e70603c72ddba1ae8a6820b25e963e091 done
#15 exporting attestation manifest sha256:4d990c5ec0c395c16f25d6cae14e55e6ff6ea13ac6654986ab46bc38c33df5af done
#15 exporting manifest list sha256:9c9fc243ab3c0866597455f8ed22b51148dd9883db02f97787daf38c5ae4d109 done
#15 naming to docker.io/library/ai_content_app_project-app:latest done
#15 unpacking to docker.io/library/ai_content_app_project-app:latest done
#15 DONE 0.1s

#16 resolving provenance for metadata file
#16 DONE 0.0s
Attaching to ai-content-pipeline-test
ai-content-pipeline-test  |  * Serving Flask app 'app'
ai-content-pipeline-test  |  * Debug mode: on
